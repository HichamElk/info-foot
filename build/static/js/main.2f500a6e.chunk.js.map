{"version":3,"sources":["components/header.jsx","components/football_club.jsx","App.js","reportWebVitals.js","serviceWorker.js","index.js"],"names":["state","leaguesID","Leagues","id","name","Header","_useDisclosure","useDisclosure","isOpen","onOpen","onClose","btnRef","React","useRef","react_default","a","createElement","chakra_ui_react_esm","theme","Fragment","chakra_ui_button_esm","ref","colorScheme","onClick","chakra_ui_modal_esm","placement","finalFocusRef","map","league","chakra_ui_layout_esm","alignItems","pr","key","react_router_dom","to","size","borderRadius","margin","p","bg","maxW","display","chakra_ui_image_esm","objectFit","boxSize","alt","src","pl","fontSize","variant","mr","FootballClub","props","_useState","useState","_useState2","Object","slicedToArray","isStatsLoading","setStatsLoading","_useState3","_useState4","data","setData","fetchTeamStats","method","url","params","league_id","season","team","team_id","headers","X-RapidAPI-Host","X-RapidAPI-Key","useEffect","axios","request","then","response","catch","error","console","chakra_ui_spinner_esm","log","arr","entries","slice","time","push","firstHalfAgainst","reduce","previousValue","currentValue","secondHalfAgainst","firstHalfFor","secondHalfFor","w","rounded","overflow","h","justify","mt","chakra_ui_avatar_esm","css","border","spacing","align","fontWeight","fontFamily","color","direction","Date","useQuery","search","useLocation","useMemo","URLSearchParams","App","query","header","react_router","path","League","get","_ref","optionsLeagueStandings","standings","parameters","errors","results","paging","current","total","country","logo","flag","rank","points","goalsDiff","group","form","status","description","all","played","win","draw","lose","goals","for","against","home","away","update","_React$useState","_React$useState2","selectedTeamInfo","setSelectedTeamInfo","prevState","objectSpread","teams","chakra_ui_table_esm","isNumeric","index","isRound","handleTeamInfo","icon","chakra_ui_icons_esm","football_club","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","window","location","hostname","match","ReactDOM","render","react","chakra_ui_color_mode_esm","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.2f500a6e.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {\r\n  ChakraProvider,\r\n  Button,\r\n  SimpleGrid,\r\n  Drawer,\r\n  DrawerBody,\r\n  DrawerFooter,\r\n  DrawerHeader,\r\n  DrawerOverlay,\r\n  DrawerContent,\r\n  DrawerCloseButton,\r\n  Flex,\r\n  Text,\r\n  theme,\r\n  Heading,\r\n  Image,\r\n  Grid,\r\n  Stack,\r\n  Center,\r\n  Box,\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Tfoot,\r\n  Tr,\r\n  Th,\r\n  Td,\r\n  TableCaption\r\n} from '@chakra-ui/react';\r\nimport axios from 'axios';\r\nimport {\r\n    Link\r\n  } from \"react-router-dom\";\r\nimport { useDisclosure } from '@chakra-ui/react'\r\n\r\n\r\n  const state = {\r\n    // 39 Premier League | 40 Championship\r\n    // 61 Ligue 1 | 62 Ligue 2\r\n    // 140 La Liga\r\n    //135 Serie A\r\n    //78 Bundesliga 1 | 79 Bundesliga 2\r\n    //144 Jupiler Pro League\r\n    // 197 Super League\r\n    // 203 Toto Super Lig\r\n    // 88 Euredivise\r\n    leaguesID : [39, 40, 61, 62, 140, 135, 78, 79, 144, 197, 203, 88],\r\n    Leagues : [\r\n        {id : 39, name:\"Premier League\"},\r\n        {id:40 ,name:\"Championship\"},\r\n        {id:61 ,name:\"Ligue 1\"},\r\n        {id:62 ,name:\"Ligue 2\"},\r\n        {id:140 ,name:\"La Liga\"},\r\n        {id:135 ,name:\"Serie A\"},\r\n        {id:78 ,name:\"Bundesliga 1\"},\r\n        {id:79 ,name:\"Bundesliga 2\"},\r\n        {id:144 ,name:\"Jupiler Pro League\"},\r\n        {id:203 ,name:\"Toto Super Lig\"},\r\n        {id:88 ,name:\"Euredivise\"}\r\n    ]\r\n  };\r\n\r\nconst Header =() =>  {\r\n    const { isOpen, onOpen, onClose } = useDisclosure()\r\n    const btnRef = React.useRef()\r\n    return (\r\n            <ChakraProvider theme={theme} >\r\n                <>\r\n      <Button ref={btnRef} colorScheme='teal' onClick={onOpen}>\r\n        Choisir le Championnat\r\n      </Button>\r\n      <Drawer\r\n        isOpen={isOpen}\r\n        placement='left'\r\n        onClose={onClose}\r\n        finalFocusRef={btnRef}\r\n      >\r\n        <DrawerOverlay />\r\n        <DrawerContent>\r\n          <DrawerCloseButton />\r\n          <DrawerHeader>Available Leagues</DrawerHeader>\r\n\r\n          <DrawerBody>\r\n            {state.Leagues.map(league => (\r\n                    <Flex alignItems=\"center\" pr=\"10\" key={league['id']}>\r\n                        <Link onClick={onClose} to={\"/league?id=\"+league['id']} size='sm'>\r\n                            <Box borderRadius='lg'  margin='6px' p=\"10px\" bg='teal.100' maxW='sm' display='flex' alignItems='baseline'>\r\n                                <Center>\r\n                                    <Image  borderRadius='full' objectFit='cover'  boxSize='60px' alt='Premier League' src={'https://media.api-sports.io/football/leagues/'+league[\"id\"]+'.png'} /> \r\n                                    <Text pl=\"15px\"  fontSize='2xl'>{league[\"name\"]}</Text>\r\n                                </Center>\r\n                            </Box>\r\n                        </Link>\r\n                    </Flex>\r\n                    ))}\r\n          </DrawerBody>\r\n\r\n          <DrawerFooter>\r\n            <Button variant='outline' mr={3} onClick={onClose}>\r\n              Cancel\r\n            </Button>\r\n          </DrawerFooter>\r\n        </DrawerContent>\r\n      </Drawer>\r\n</>\r\n            </ChakraProvider>\r\n        );\r\n}\r\n\r\nexport default Header;\r\n/*options\r\n<>\r\n      <Button ref={btnRef} colorScheme='teal' onClick={onOpen}>\r\n        Open\r\n      </Button>\r\n      <Drawer\r\n        isOpen={isOpen}\r\n        placement='right'\r\n        onClose={onClose}\r\n        finalFocusRef={btnRef}\r\n      >\r\n        <DrawerOverlay />\r\n        <DrawerContent>\r\n          <DrawerCloseButton />\r\n          <DrawerHeader>Available Leagues</DrawerHeader>\r\n\r\n          <DrawerBody>\r\n            {state.Leagues.map(league => (\r\n                        <Flex alignItems=\"center\">\r\n                        <Image  borderRadius='full' objectFit='cover'  boxSize='60px' alt='Premier League' src={'https://media.api-sports.io/football/leagues/'+league[\"id\"]+'.png'} /> \r\n                        <Link onClick={onClose} to={\"/league?id=\"+league['id']} size='sm'>{league[\"name\"]}</Link>\r\n                    </Flex>\r\n                    ))}\r\n          </DrawerBody>\r\n\r\n          <DrawerFooter>\r\n            <Button variant='outline' mr={3} onClick={onClose}>\r\n              Cancel\r\n            </Button>\r\n          </DrawerFooter>\r\n        </DrawerContent>\r\n      </Drawer>\r\n</>\r\n\r\n                    <Flex alignItems=\"center\">\r\n                        <Image  borderRadius='full' objectFit='cover'  boxSize='60px' alt='Premier League' src='https://media.api-sports.io/football/leagues/{league[\"id\"]}.png' /> \r\n                        <Link to=\"/league?id={league[\"id\"]}\" size='sm'>{league[\"name\"]}</Link>\r\n                    </Flex>\r\n                    <Box textAlign=\"center\">\r\n                        <Image  borderRadius='full' objectFit='cover'  boxSize='60px' alt='Championship' src='https://media.api-sports.io/football/leagues/40.png' />\r\n                        <Link to=\"/league?id=40\" size='sm'>Championship</Link>\r\n                    </Box>\r\n                    <Box textAlign=\"center\">\r\n                        <Image  borderRadius='full' objectFit='cover'  boxSize='60px' alt='Ligue 1' src='https://media.api-sports.io/football/leagues/61.png' />\r\n                        <Heading size='sm'>Ligue 1</Heading>\r\n                    </Box>\r\n                    <Box textAlign=\"center\">\r\n                    <Image  borderRadius='full' objectFit='cover'  boxSize='60px' alt='Ligue 2' src='https://media.api-sports.io/football/leagues/62.png' />\r\n                        <Heading size='sm'>Ligue 2</Heading>\r\n                    </Box>\r\n                    <Box textAlign=\"center\">\r\n                    <Image  borderRadius='full' objectFit='cover'  boxSize='60px' alt='La Liga' src='https://media.api-sports.io/football/leagues/140.png' />\r\n                        <Heading size='sm'>La Liga</Heading>\r\n                    </Box>\r\n                    <Box textAlign=\"center\">\r\n                    <Image  borderRadius='full' objectFit='cover'  boxSize='60px' alt='Serie A' src='https://media.api-sports.io/football/leagues/135.png' />\r\n                        <Heading size='sm'>Serie A</Heading>\r\n                    </Box>\r\n                    <Box textAlign=\"center\">\r\n                    <Image  borderRadius='full' objectFit='cover'  boxSize='60px' alt='Bundesliga 1' src='https://media.api-sports.io/football/leagues/78.png' />\r\n                        <Heading size='sm'>Bundesliga 1</Heading>\r\n                    </Box>\r\n                    <Box textAlign=\"center\">\r\n                    <Image  borderRadius='full' objectFit='cover'  boxSize='60px' alt='Bundesliga 2' src='https://media.api-sports.io/football/leagues/79.png' />\r\n                        <Heading size='sm'>Bundesliga 2</Heading>\r\n                    </Box>\r\n                    <Box textAlign=\"center\">\r\n                    <Image  borderRadius='full' objectFit='cover'  boxSize='60px' alt='Jupiler Pro League' src='https://media.api-sports.io/football/leagues/144.png' />\r\n                        <Heading size='sm'>Jupiler Pro League</Heading>\r\n                    </Box>\r\n                    <Box textAlign=\"center\">\r\n                    <Image  borderRadius='full' objectFit='cover'  boxSize='60px' alt='Super League' src='https://media.api-sports.io/football/leagues/197.png' />\r\n                        <Heading size='sm'>Super League</Heading>\r\n                    </Box>\r\n                    <Box textAlign=\"center\">\r\n                    <Image  borderRadius='full' objectFit='cover'  boxSize='60px' alt='Super Lig' src='https://media.api-sports.io/football/leagues/203.png' />\r\n                        <Heading size='sm'>Super Lig</Heading>\r\n                    </Box>\r\n                    <Box textAlign=\"center\">\r\n                    <Image  borderRadius='full' objectFit='cover'  boxSize='60px' alt='Eredivisie' src='https://media.api-sports.io/football/leagues/88.png' />\r\n                        <Heading size='sm'>Eredivisie</Heading>\r\n                    </Box>\r\n\r\n*/","import {\r\n  Heading,\r\n  Avatar,\r\n  Box,\r\n  Center,\r\n  Image,\r\n  Flex,\r\n  Text,\r\n  Stack,\r\n  Button,\r\n  useColorModeValue,\r\n  Spinner\r\n} from '@chakra-ui/react';\r\nimport React, {useEffect} from 'react';\r\nimport { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nconst FootballClub = (props) => {\r\n  const [isStatsLoading, setStatsLoading] = useState(true);\r\n\r\n  const [data, setData] = useState();\r\n\r\n  const fetchTeamStats = {\r\n      method: 'GET',\r\n      url: 'https://api-football-v1.p.rapidapi.com/v3/teams/statistics',\r\n      params: {\r\n          league: props.league_id,\r\n          season: 2022,\r\n          team: props.team_id\r\n      },\r\n      headers: {\r\n      'X-RapidAPI-Host': 'api-football-v1.p.rapidapi.com',\r\n      'X-RapidAPI-Key': '91eeb26ed8msh8447d341df76518p1a7653jsna3db505351af'\r\n      }\r\n  }\r\n\r\n  useEffect(() => {\r\n      axios.request(fetchTeamStats).then(response => {\r\n          setData(response.data);\r\n          setStatsLoading(false);\r\n      }\r\n      ).catch(function (error) {\r\n          console.error(error);\r\n      });\r\n  }, []);\r\n\r\n  if(isStatsLoading) {\r\n      return <Center><Spinner size='xl'/></Center>\r\n  }\r\n  console.log(data);\r\n  let arr=[];\r\n          Object.entries(data['response']['goals']['against']['minute']).slice(0,3).map(time => arr.push(Object.entries(time)[1][1]['total']))\r\n          let firstHalfAgainst=arr.reduce((previousValue, currentValue) => previousValue + currentValue,0);\r\n          arr=[];\r\n          Object.entries(data['response']['goals']['against']['minute']).slice(3,6).map(time => arr.push(Object.entries(time)[1][1]['total']))\r\n          let secondHalfAgainst=arr.reduce((previousValue, currentValue) => previousValue + currentValue,0);\r\n\r\n\r\n          arr=[];\r\n          Object.entries(data['response']['goals']['for']['minute']).slice(0,3).map(time => arr.push(Object.entries(time)[1][1]['total']))\r\n          let firstHalfFor=arr.reduce((previousValue, currentValue) => previousValue + currentValue,0);\r\n          arr=[];\r\n          Object.entries(data['response']['goals']['for']['minute']).slice(3,6).map(time => arr.push(Object.entries(time)[1][1]['total']))\r\n          let secondHalfFor=arr.reduce((previousValue, currentValue) => previousValue + currentValue,0);\r\n          \r\n\r\n  return (\r\n      <Center >\r\n        <Box\r\n          w={'full'}\r\n          rounded={'md'}\r\n          overflow={'hidden'}>\r\n          <Image\r\n            h={'120px'}\r\n            w={'full'}\r\n            bg={'black'}\r\n            objectFit={'cover'}\r\n          />\r\n          <Flex justify={'center'} mt={-12}>\r\n            <Avatar\r\n              size={'xl'}\r\n              src={\r\n                  data['response']['team']['logo']\r\n              }\r\n              alt={data['response']['team']['name']}\r\n              css={{\r\n                border: '2px solid white',\r\n              }}\r\n            />\r\n          </Flex>\r\n  \r\n          <Box p={6}>\r\n            <Stack spacing={0} align={'center'} >\r\n              <Heading fontSize={'2xl'} fontWeight={500} fontFamily={'body'} >\r\n                {data['response']['team']['name']}\r\n              </Heading>\r\n              <Text color={'gray.500'}>{'Saison : '+data['response']['league']['season']}</Text>\r\n            </Stack>\r\n            <Stack direction={'row'} justify={'center'} spacing={6}>\r\n            <Stack spacing={0} align={'center'}>\r\n                <Text fontWeight={600} >Buts</Text>\r\n                <Text  fontWeight={500} color={'gray.600'}>\r\n                  1er mi-Temps : {firstHalfAgainst}\r\n                  <br/>\r\n                  2nd mi-Temps : {secondHalfAgainst}\r\n                </Text>\r\n              </Stack>\r\n              <Stack spacing={0} align={'center'}>\r\n                <Text fontWeight={600} >Buts encaissés</Text>\r\n                <Text  fontWeight={500} color={'gray.600'}>\r\n                  1er mi-Temps : {firstHalfFor}\r\n                  <br/>\r\n                  2nd mi-Temps : {secondHalfFor}\r\n                </Text>\r\n              </Stack>\r\n            </Stack>\r\n            \r\n          </Box>\r\n        </Box>\r\n      </Center>\r\n  );\r\n\r\n      \r\n  \r\n}\r\n\r\nexport default FootballClub;","import React, { useState } from 'react';\r\nimport {\r\n  ChakraProvider, SimpleGrid, Box,\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Tr,\r\n  Th,\r\n  Td,\r\n  TableCaption,\r\n  Avatar,\r\n  Button,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n} from '@chakra-ui/react';\r\nimport { useDisclosure, Spinner } from '@chakra-ui/react';\r\nimport { InfoOutlineIcon } from '@chakra-ui/icons';\r\nimport { IconButton } from '@chakra-ui/react'\r\nimport Header from './components/header.jsx';\r\nimport FootballClub from './components/football_club.jsx';\r\n//import League from './components/league.jsx';\r\nimport { useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  Switch,\r\n  BrowserRouter as Router,\r\n  Routes,\r\n  Route,\r\n  Link,\r\n  useParams,\r\n  useLocation\r\n} from \"react-router-dom\";\r\nconst currentDate = new Date();\r\n\r\n\r\n  function useQuery() {\r\n    const { search } = useLocation();\r\n  \r\n    return React.useMemo(() => new URLSearchParams(search), [search]);\r\n  }\r\n\r\n\r\n  \r\nexport default function App() {\r\n    let query = useQuery();\r\n  return (\r\n    <Router>\r\n      <ChakraProvider>\r\n        <Header/>\r\n      </ChakraProvider>\r\n      <div>\r\n        \r\n        <Switch>\r\n          \r\n          <Route path=\"/league\">\r\n            <League league_id={query.get(\"id\")} />\r\n          </Route>\r\n          \r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\n\r\n  \r\nfunction League ({league_id}) {\r\n  let query = useQuery();\r\n  league_id=query.get(\"id\");\r\n\r\n\r\n  //Http params for /standings\r\n  const optionsLeagueStandings = {\r\n      method: 'GET',\r\n      url: 'https://api-football-v1.p.rapidapi.com/v3/standings',\r\n      params: {\r\n          league: league_id,\r\n          season: 2022\r\n      },\r\n      headers: {\r\n      'X-RapidAPI-Host': 'api-football-v1.p.rapidapi.com',\r\n      'X-RapidAPI-Key': '91eeb26ed8msh8447d341df76518p1a7653jsna3db505351af'\r\n      }\r\n    }\r\n\r\n  //Previous state before /standings is called (prevent error)\r\n  const [data, setData]= useState({error: false, standings : { \"get\":\"standings\",\"parameters\":{\"league\":\"39\",\"season\":\"2021\"},\"errors\":[],\"results\":1,\"paging\":{\"current\":1,\"total\":1},\"response\":[{\"league\":{\"id\":39,\"name\":\"PremierLeague\",\"country\":\"England\",\"logo\":\"https:\\/\\/media.api-sports.io\\/football\\/leagues\\/39.png\",\"flag\":\"https:\\/\\/media.api-sports.io\\/flags\\/gb.svg\",\"season\":2021,\"standings\":[[{\"rank\":1,\"team\":{\"id\":50,\"name\":\"Equipe\",\"logo\":\"\"},\"points\":70,\"goalsDiff\":50,\"group\":\"PremierLeague\",\"form\":\"DWWLW\",\"status\":\"same\",\"description\":\"Promotion-ChampionsLeague(GroupStage)\",\"all\":{\"played\":29,\"win\":0,\"draw\":0,\"lose\":0,\"goals\":{\"for\":0,\"against\":0}},\"home\":{\"played\":14,\"win\":11,\"draw\":1,\"lose\":2,\"goals\":{\"for\":40,\"against\":10}},\"away\":{\"played\":15,\"win\":11,\"draw\":3,\"lose\":1,\"goals\":{\"for\":28,\"against\":8}},\"update\":\"2022-03-29T00:00:00+00:00\"}]]}}] }});  \r\n  \r\n\r\n  // Fiche Info handle component\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const [selectedTeamInfo, setSelectedTeamInfo] = React.useState({\"rank\":1,\"team\":{\"id\":50,\"name\":\"TeamName\",\"logo\":\"https://media.api-sports.io/football/teams/50.png\"},\"points\":70,\"goalsDiff\":50,\"group\":\"PremierLeague\",\"form\":\"DWWLW\",\"status\":\"same\",\"description\":\"Promotion-ChampionsLeague(GroupStage)\",\"all\":{\"played\":29,\"win\":22,\"draw\":4,\"lose\":3,\"goals\":{\"for\":68,\"against\":18}},\"home\":{\"played\":14,\"win\":11,\"draw\":1,\"lose\":2,\"goals\":{\"for\":40,\"against\":10}},\"away\":{\"played\":15,\"win\":11,\"draw\":3,\"lose\":1,\"goals\":{\"for\":28,\"against\":8}},\"update\":\"2022-03-29T00:00:00+00:00\"});\r\n  const handleTeamInfo = (team) => {\r\n    setSelectedTeamInfo(team);\r\n    onOpen();\r\n  }\r\n\r\n  //Call URL /stadings with Axios\r\n  useEffect(() => {\r\n    console.log(\"The League istance is refreshed with ID : \",league_id);\r\n    axios.request(optionsLeagueStandings).then((response) => {\r\n      setData(prevState => {\r\n          return {...prevState, standings:response.data}\r\n      })\r\n  }\r\n  ).catch(function (error) {\r\n      console.error(error);\r\n  });\r\n  }, [league_id])\r\n\r\n      console.log(\"Received data :\",data); \r\n      //Store JSON Array of Teams \r\n      let teams=data['standings']['response'][0]['league']['standings'][0];\r\n      return (<ChakraProvider>\r\n                  <SimpleGrid spacing='40px'>\r\n                              \r\n                      <Table variant='striped' colorScheme='teal' size='sm'>\r\n                          <TableCaption>Equipe de la ligue {league_id}</TableCaption>\r\n                          <Thead>\r\n                          <Tr>\r\n                              <Th></Th>\r\n                              <Th>Equipe</Th>\r\n                              <Th>V</Th>\r\n                              <Th>N</Th>\r\n                              <Th>D</Th>\r\n                              <Th>Fiche Info</Th>\r\n                              <Th isNumeric>But marqués</Th>\r\n                              <Th isNumeric>1ere MT</Th>\r\n                              <Th isNumeric>2eme MT</Th>\r\n                              <Th isNumeric>Buts encaissés</Th>\r\n                              <Th isNumeric>1ere MT</Th>\r\n                              <Th isNumeric>2eme MT</Th>\r\n                              \r\n                          </Tr>\r\n                          </Thead>\r\n                          <Tbody>\r\n                            { // loop For each Team in Teams return (...)\r\n                            teams.map((team, index) =>{\r\n                              return(<Tr key={index}> \r\n                                <Td><Avatar size='sm' name={team['team']['name']} src={team['team']['logo']}/></Td>\r\n                                <Td>{team['team']['name']}</Td>\r\n                                <Td>{team['all']['win']}</Td>\r\n                                <Td>{team['all']['draw']}</Td>\r\n                                <Td>{team['all']['lose']}</Td>\r\n                                <Td>\r\n                                <IconButton key={team} isRound={true} variant=\"ghost\" onClick={() => handleTeamInfo(team)} icon={<InfoOutlineIcon/>}/>\r\n                              </Td>\r\n                                <Td isNumeric>{team['all']['goals']['for']}</Td>\r\n                                <Td isNumeric>--</Td>\r\n                                <Td isNumeric>--</Td>\r\n                                <Td isNumeric>{team['all']['goals']['against']}</Td>\r\n                                <Td isNumeric>--</Td>\r\n                                <Td isNumeric>--</Td>\r\n                                \r\n                              </Tr>)\r\n                            })}\r\n                          </Tbody>\r\n                          \r\n                      </Table>\r\n                      <Modal isOpen={isOpen} onClose={onClose}>\r\n                            <ModalOverlay />\r\n                              <ModalContent>\r\n                                <ModalHeader>{(typeof selectedTeamInfo['team']==='undefined') ? 'Empty' : selectedTeamInfo['team']['name']}</ModalHeader>\r\n                                <ModalCloseButton />\r\n                                <ModalBody>\r\n                                  {\r\n                                    <FootballClub league_id={league_id} team_id={selectedTeamInfo['team']['id']} />\r\n                                    //<FootballClub club_id={league_id} team_id={data} />\r\n                                    //waitForElement(club['team'], data['statistics'])\r\n                                  }\r\n                                </ModalBody>\r\n                                <ModalFooter>\r\n                                  <Button colorScheme='blue' mr={3} onClick={onClose}>\r\n                                    Close\r\n                                  </Button>\r\n                                </ModalFooter>\r\n                              </ModalContent>\r\n                          </Modal>\r\n                  </SimpleGrid>       \r\n              </ChakraProvider>);\r\n  \r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It is the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { ColorModeScript } from '@chakra-ui/react';\r\nimport React, { StrictMode } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Link,\r\n  useLocation\r\n} from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <Router><StrictMode>\r\n  <ColorModeScript />\r\n  <App />\r\n</StrictMode></Router>\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorker.unregister();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}